trigger:
  branches:
    include:
      - main
      - master

pr:
  branches:
    include:
      - main
      - master

jobs:
- job: Test
  timeoutInMinutes: 60
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y nodejs npm
    displayName: 'Install Node.js and npm'
  - script: npm install
    displayName: 'Install dependencies'
  - script: npx playwright install
    displayName: 'Install Playwright Browsers'
  - script: npm install -g allure-commandline --save-dev
    displayName: 'Install Allure Report'
    env:
      LOGIN_URL: $(LOGIN_URL)
      LOGIN_PASSWORD_SECONDARY: $(LOGIN_PASSWORD_SECONDARY)
      LOGIN_EMAIL1: $(LOGIN_EMAIL1)
      LOGIN_PASSWORD1: $(LOGIN_PASSWORD1)
      LOGIN_EMAIL: $(LOGIN_EMAIL)
      LOGIN_PASSWORD: $(LOGIN_PASSWORD)
      MY_APPLICATION_URL: $(MY_APPLICATION_URL)
  - script: npx playwright test --reporter=html --output=playwright-report/
    displayName: 'Run Tests and Generate Allure Report'
  - script: |
      if [ -d "playwright-report" ]; then
      echo "Playwright report exists."
      else
      echo "Playwright report does not exist."
      fi
    displayName: 'Check if Playwright report exists'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'playwright-report/'
      artifact: 'playwright-report'
      publishLocation: 'pipeline'
    displayName: 'Publish Playwright report'
